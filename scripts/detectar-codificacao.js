const fs = require('fs');

function detectarCodificacao() {
  try {
    console.log('üîç Detectando codifica√ß√£o do arquivo CSV...');
    
    // Tentar diferentes codifica√ß√µes
    const codificacoes = ['utf8', 'latin1', 'windows-1252', 'iso-8859-1'];
    
    for (const codificacao of codificacoes) {
      try {
        console.log(`\nüìñ Tentando codifica√ß√£o: ${codificacao}`);
        const content = fs.readFileSync('municipios.csv', codificacao);
        const lines = content.split('\n').slice(0, 5);
        
        console.log('üìã Primeiras 5 linhas:');
        lines.forEach((line, index) => {
          console.log(`  ${index + 1}: ${line.substring(0, 100)}...`);
        });
        
        // Verificar se cont√©m caracteres problem√°ticos
        const temCaracteresProblematicos = content.includes('√É') || content.includes('');
        console.log(`‚ùì Cont√©m caracteres problem√°ticos: ${temCaracteresProblematicos ? 'SIM' : 'N√ÉO'}`);
        
        if (!temCaracteresProblematicos) {
          console.log(`‚úÖ Codifica√ß√£o ${codificacao} parece correta!`);
          return codificacao;
        }
        
      } catch (error) {
        console.log(`‚ùå Erro com codifica√ß√£o ${codificacao}: ${error.message}`);
      }
    }
    
    console.log('\n‚ö†Ô∏è Nenhuma codifica√ß√£o perfeita encontrada. Usando UTF-8...');
    return 'utf8';
    
  } catch (error) {
    console.error('‚ùå Erro ao detectar codifica√ß√£o:', error);
    return 'utf8';
  }
}

const codificacao = detectarCodificacao();
console.log(`\nüéØ Codifica√ß√£o recomendada: ${codificacao}`);
