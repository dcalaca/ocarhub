import { readFileSync } from 'fs'

async function installETLFixedOrderBy() {
  console.log('üîß Instalando sistema ETL corrigido (sem limpeza e sem ORDER BY)...\n')

  try {
    // Ler o SQL
    const sql = readFileSync('database/etl-fixed-order-by.sql', 'utf8')
    
    console.log('üìù SQL para executar no Supabase SQL Editor:')
    console.log('=' .repeat(80))
    console.log(sql)
    console.log('=' .repeat(80))
    
    console.log('\n‚úÖ Execute o SQL acima no Supabase SQL Editor!')
    console.log('   URL: https://supabase.com/dashboard/project/kfsteismyqpekbaqwuez/sql')
    
    console.log('\nüîß Este sistema ETL corrigido:')
    console.log('   ‚Ä¢ N√ÉO limpa as tabelas existentes')
    console.log('   ‚Ä¢ Usa ON CONFLICT DO NOTHING para evitar duplicatas')
    console.log('   ‚Ä¢ Remove ORDER BY problem√°tico do SELECT DISTINCT')
    console.log('   ‚Ä¢ Ignora c√≥digo FIPE duplicado (usa apenas nome da marca)')
    console.log('   ‚Ä¢ Migra dados da ocar_transbordo')
    console.log('   ‚Ä¢ Cria fun√ß√µes auxiliares para consulta')
    console.log('   ‚Ä¢ Testa o sistema com dados reais')
    
    console.log('\n‚ú® CORRE√á√ïES:')
    console.log('   ‚Ä¢ Removido ORDER BY do SELECT DISTINCT')
    console.log('   ‚Ä¢ Usado ON CONFLICT para evitar duplicatas')
    console.log('   ‚Ä¢ Ignorado c√≥digo FIPE para marcas (usa apenas nome)')
    console.log('   ‚Ä¢ Sistema robusto sem limpeza agressiva')
    
    console.log('\n‚ö†Ô∏è IMPORTANTE:')
    console.log('   ‚Ä¢ A tabela ocar_transbordo N√ÉO ser√° limpa')
    console.log('   ‚Ä¢ Apenas os dados ser√£o migrados para as tabelas normalizadas')
    console.log('   ‚Ä¢ Sistema estar√° pronto para consultas do frontend')
    console.log('   ‚Ä¢ Duplicatas ser√£o ignoradas automaticamente')
    
  } catch (error) {
    console.error('Erro ao ler arquivo SQL:', error.message)
  }
}

installETLFixedOrderBy()
