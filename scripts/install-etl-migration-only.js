import { readFileSync } from 'fs'

async function installETLMigrationOnly() {
  console.log('üöÄ Instalando sistema ETL - Apenas migra√ß√£o inicial...\n')

  try {
    // Ler o SQL
    const sql = readFileSync('database/etl-migration-only.sql', 'utf8')
    
    console.log('üìù SQL para executar no Supabase SQL Editor:')
    console.log('=' .repeat(80))
    console.log(sql)
    console.log('=' .repeat(80))
    
    console.log('\n‚úÖ Execute o SQL acima no Supabase SQL Editor!')
    console.log('   URL: https://supabase.com/dashboard/project/kfsteismyqpekbaqwuez/sql')
    
    console.log('\nüöÄ Este sistema ETL (migra√ß√£o inicial) inclui:')
    console.log('   ‚Ä¢ DDL das 3 tabelas normalizadas com chaves √∫nicas')
    console.log('   ‚Ä¢ Migra√ß√£o dos dados existentes da ocar_transbordo')
    console.log('   ‚Ä¢ Fun√ß√µes auxiliares para consulta')
    console.log('   ‚Ä¢ √çndices para performance')
    console.log('   ‚Ä¢ Verifica√ß√£o e amostra de dados')
    
    console.log('\n‚ú® BENEF√çCIOS:')
    console.log('   ‚Ä¢ Processa dados j√° existentes na ocar_transbordo')
    console.log('   ‚Ä¢ Cria estrutura normalizada para consultas')
    console.log('   ‚Ä¢ Fun√ß√µes prontas para o frontend')
    console.log('   ‚Ä¢ Performance otimizada com √≠ndices')
    
    console.log('\n‚ö†Ô∏è IMPORTANTE:')
    console.log('   ‚Ä¢ A tabela ocar_transbordo N√ÉO ser√° limpa')
    console.log('   ‚Ä¢ Apenas os dados ser√£o migrados para as tabelas normalizadas')
    console.log('   ‚Ä¢ Pr√≥ximo m√™s voc√™ pode importar o CSV de outubro')
    console.log('   ‚Ä¢ O sistema estar√° pronto para futuras importa√ß√µes')
    
    console.log('\nüìÖ PR√ìXIMOS PASSOS:')
    console.log('   ‚Ä¢ Execute este SQL agora para migrar dados existentes')
    console.log('   ‚Ä¢ Em outubro, importe o novo CSV na ocar_transbordo')
    console.log('   ‚Ä¢ O sistema estar√° pronto para processar automaticamente')
    
  } catch (error) {
    console.error('Erro ao ler arquivo SQL:', error.message)
  }
}

installETLMigrationOnly()
