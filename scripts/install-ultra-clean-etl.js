import { readFileSync } from 'fs'

async function installUltraCleanETL() {
  console.log('üßπ Instalando sistema ETL com limpeza ultra agressiva...\n')

  try {
    // Ler o SQL
    const sql = readFileSync('database/ultra-clean-etl.sql', 'utf8')
    
    console.log('üìù SQL para executar no Supabase SQL Editor:')
    console.log('=' .repeat(80))
    console.log(sql)
    console.log('=' .repeat(80))
    
    console.log('\n‚úÖ Execute o SQL acima no Supabase SQL Editor!')
    console.log('   URL: https://supabase.com/dashboard/project/kfsteismyqpekbaqwuez/sql')
    
    console.log('\nüßπ Este sistema ETL com limpeza ultra agressiva:')
    console.log('   ‚Ä¢ Desabilita RLS temporariamente')
    console.log('   ‚Ä¢ Limpa tabelas com CASCADE (for√ßa limpeza)')
    console.log('   ‚Ä¢ Usa ON CONFLICT DO NOTHING para evitar duplicatas')
    console.log('   ‚Ä¢ Migra dados da ocar_transbordo')
    console.log('   ‚Ä¢ Cria fun√ß√µes auxiliares para consulta')
    console.log('   ‚Ä¢ Reabilita RLS ap√≥s migra√ß√£o')
    console.log('   ‚Ä¢ Testa o sistema com dados reais')
    
    console.log('\n‚ú® ESTRAT√âGIA:')
    console.log('   ‚Ä¢ CASCADE for√ßa limpeza completa das tabelas')
    console.log('   ‚Ä¢ ON CONFLICT DO NOTHING evita erros de duplicata')
    console.log('   ‚Ä¢ Verifica√ß√£o em cada etapa do processo')
    console.log('   ‚Ä¢ Sistema robusto e √† prova de falhas')
    
    console.log('\n‚ö†Ô∏è IMPORTANTE:')
    console.log('   ‚Ä¢ A tabela ocar_transbordo N√ÉO ser√° limpa')
    console.log('   ‚Ä¢ Apenas os dados ser√£o migrados para as tabelas normalizadas')
    console.log('   ‚Ä¢ Sistema estar√° pronto para consultas do frontend')
    console.log('   ‚Ä¢ RLS ser√° reabilitado ap√≥s a migra√ß√£o')
    
  } catch (error) {
    console.error('Erro ao ler arquivo SQL:', error.message)
  }
}

installUltraCleanETL()
